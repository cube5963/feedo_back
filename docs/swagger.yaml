basePath: /
definitions:
  models.CreateFormRequest:
    properties:
      form_name:
        example: アンケートフォーム
        type: string
      img_id:
        example: "1234567890"
        type: string
      jwt:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
      sections:
        items:
          $ref: '#/definitions/models.CreateSectionRequest'
        type: array
    type: object
  models.CreateSectionRequest:
    properties:
      section_desc:
        description: encoding base64 from json
        example: 質問の中身
        type: string
      section_name:
        example: 質問1
        type: string
      section_type:
        allOf:
        - $ref: '#/definitions/models.FormType'
        example: radio
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  models.FormType:
    enum:
    - radio
    - checkbox
    - text
    - star
    - two_choice
    - slider
    type: string
    x-enum-varnames:
    - FormTypeRadio
    - FormTypeCheckbox
    - FormTypeText
    - FormTypeStar
    - FormTypeTwoChoice
    - FormTypeSlider
  models.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJpc3N1ZXIiLCJhbGciOiJIUzI1NiIsInN1YiI6InVzZXIiLCJhdWQiOlsiYXV0aWVuY2UiXSwiaWF0IjoxNzQ1NDY3MjgzLCJleHBpcmF0aW9uIjoxNzQ1NDY3MjgzLCJqdGkiOiJpZCJ9.dxgM6uH2F8ZglV_xcPhjCRnOSJBYq9oeS1TDLkLg_eg
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        example: success message
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      email:
        example: example@example.com
        type: string
      password:
        example: password
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        example: example@example.com
        type: string
      name:
        example: 田所浩二
        type: string
      password:
        example: password
        type: string
    type: object
  models.UserVerifyRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJpc3N1ZXIiLCJhbGciOiJIUzI1NiIsInN1YiI6InVzZXIiLCJhdWQiOlsiYXV0aWVuY2UiXSwiaWF0IjoxNzQ1NDY3MjgzLCJleHBpcmF0aW9uIjoxNzQ1NDY3MjgzLCJqdGkiOiJpZCJ9.dxgM6uH2F8ZglV_xcPhjCRnOSJBYq9oeS1TDLkLg_eg
        type: string
    type: object
  models.VerifyResponse:
    properties:
      verify:
        example: true
        type: boolean
    type: object
host: localhost:5000
info:
  contact: {}
  description: Feedo API documentation
  title: Feedo API
  version: "1.0"
paths:
  /form/create:
    post:
      consumes:
      - application/json
      description: Create a new form
      parameters:
      - description: Form data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/models.CreateFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Form creation success
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "500":
          description: Form creation failure
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create Form
      tags:
      - form
  /user/login:
    post:
      consumes:
      - application/json
      description: This is a user login endpoint
      parameters:
      - description: User login data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ログイン成功
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: リクエスト不正
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 認証失敗
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login endpoint
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ユーザー登録成功
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: リクエスト不正
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: ユーザー登録失敗
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User Registration
      tags:
      - user
  /user/verify:
    post:
      consumes:
      - application/json
      description: This is a user verify endpoint
      parameters:
      - description: User verify data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns verification result
          schema:
            $ref: '#/definitions/models.VerifyResponse'
      summary: User verify endpoint
      tags:
      - user
swagger: "2.0"
