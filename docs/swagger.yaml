basePath: /
definitions:
  create.ErrorResponse:
    properties:
      error:
        example: Failed to create form
        type: string
    type: object
  create.FormResponse:
    properties:
      message:
        example: Form created successfully
        type: string
    type: object
  login.LoginResponse:
    properties:
      token:
        example: eyJhbGciOijiwzIJNviIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJpc3N1ZXIiLCJhsIiOiJzdWJqZWN0IiwiYXVkIjpbImF1ZGllbmNlIsdvssImV4cCI6MTMIJNTQ2NzM0MywibmJmIjoxNzQ1NhtbMjgzLCJpYXQiOjE3NDU0NjcyODMsImp0aSI6ImlkIn0.dxgM6uH2F8ZglV_xcPhjCRnOSJBYq9oeS1TDLkLg_eg
        type: string
    type: object
  login.VerifyResponse:
    properties:
      verify:
        example: true
        type: boolean
    type: object
  models.CreateFormRequest:
    properties:
      form_name:
        example: アンケートフォーム
        type: string
      img_id:
        example: "1234567890"
        type: string
      sections:
        items:
          $ref: '#/definitions/models.CreateSectionRequest'
        type: array
    type: object
  models.CreateSectionRequest:
    properties:
      section_desc:
        description: encoding base64 from json
        example: 質問の中身
        type: string
      section_name:
        example: 質問1
        type: string
      section_type:
        allOf:
        - $ref: '#/definitions/models.FormType'
        example: radio
    type: object
  models.FormType:
    enum:
    - radio
    - checkbox
    - text
    - star
    - two_choice
    - slider
    type: string
    x-enum-varnames:
    - FormTypeRadio
    - FormTypeCheckbox
    - FormTypeText
    - FormTypeStar
    - FormTypeTwoChoice
    - FormTypeSlider
  register.ErrorResponse:
    properties:
      error:
        example: Failed to register user
        type: string
    type: object
  register.UserResponse:
    properties:
      message:
        example: User registered successfully
        type: string
    type: object
host: localhost:5000
info:
  contact: {}
  description: Feedo API documentation
  title: Feedo API
  version: "1.0"
paths:
  /form/create:
    post:
      consumes:
      - application/json
      description: Create a new form
      parameters:
      - description: Form data
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/models.CreateFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Form creation success
          schema:
            $ref: '#/definitions/create.FormResponse'
        "500":
          description: Form creation failure
          schema:
            $ref: '#/definitions/create.ErrorResponse'
      summary: Create Form
      tags:
      - form
  /user/login:
    post:
      consumes:
      - application/json
      description: This is a user login endpoint
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns JWT token
          schema:
            $ref: '#/definitions/login.LoginResponse'
      summary: User login endpoint
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: User registration success
          schema:
            $ref: '#/definitions/register.UserResponse'
        "500":
          description: User registration failure
          schema:
            $ref: '#/definitions/register.ErrorResponse'
      summary: User Registration
      tags:
      - user
  /user/verify:
    post:
      consumes:
      - application/json
      description: This is a user verify endpoint
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns verification result
          schema:
            $ref: '#/definitions/login.VerifyResponse'
      summary: User verify endpoint
      tags:
      - user
swagger: "2.0"
